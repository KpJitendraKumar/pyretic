{'test': 'congested_link', 'm': '20', 'n': '20'}
96.5968940258
         163174201 function calls (157245407 primitive calls) in 96.598 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  9573005   15.209    0.000   24.400    0.000 language.py:418(map_check)
 10206639    6.892    0.000   32.226    0.000 language.py:415(covers)
 10412588    6.186    0.000   38.412    0.000 classifier.py:405(<lambda>)
 11228289    4.332    0.000    6.125    0.000 util.py:103(items)
   306224    3.654    0.000    9.880    0.000 re.py:378(re_nub)
 21181175    3.571    0.000    3.571    0.000 {isinstance}
695303/6439    3.230    0.000   57.208    0.009 {reduce}
 11374193    2.576    0.000    2.576    0.000 util.py:118(__getitem__)
  5716526    2.501    0.000    3.159    0.000 re.py:163(__eq__)
  5699639    2.388    0.000    5.534    0.000 re.py:87(__ne__)
 11003792    2.386    0.000    2.386    0.000 util.py:94(__contains__)
1092696/146417    2.273    0.000    8.005    0.000 path.py:2137(match_tree_intersect)
  5699639    2.173    0.000    3.133    0.000 re.py:375(<lambda>)
   306224    2.097    0.000    5.230    0.000 {sorted}
 11228331    1.793    0.000    1.793    0.000 {method 'items' of 'dict' objects}
   327109    1.542    0.000   19.127    0.000 re.py:458(smart_alter)
   388281    1.482    0.000   11.700    0.000 classifier.py:291(_cross_act)
   332118    1.443    0.000    4.947    0.000 language.py:361(intersect)
714227/140052    1.409    0.000   12.683    0.000 path.py:2222(match_tree_tree_intersect)
  2095852    1.295    0.000    1.751    0.000 language.py:258(__eq__)
   319895    1.264    0.000    1.432    0.000 classifier.py:107(__init__)
    29653    1.235    0.000   57.009    0.002 classifier.py:225(__rshift__)
   533803    1.059    0.000    1.661    0.000 path.py:2052(match_neg_intersect)
1001346/337205    1.031    0.000    6.655    0.000 path.py:2085(match_neg_tree_intersect)
   388281    0.969    0.000    2.731    0.000 classifier.py:260(_sequence_actions)
  5699639    0.961    0.000    0.961    0.000 re.py:167(sort_key)
   453973    0.885    0.000    1.418    0.000 path.py:2036(match_intersect)
  3261761    0.843    0.000    0.843    0.000 language.py:1132(__eq__)
   443011    0.820    0.000    1.321    0.000 path.py:2067(match_neg_neg_intersect)
688115/14624    0.817    0.000    3.555    0.000 {method 'join' of 'str' objects}
524647/445845    0.816    0.000    4.572    0.000 path.py:2165(match_neg_tree_tree_intersect)
25522/12761    0.786    0.000    2.132    0.000 language.py:326(__init__)
288627/8022    0.709    0.000   18.334    0.002 path.py:261(replace_node)
    29653    0.704    0.000   42.491    0.001 classifier.py:401(remove_shadowed_cover_single)
  5730974    0.702    0.000    0.702    0.000 {method 'append' of 'list' objects}
   688864    0.655    0.000    0.915    0.000 classifier.py:156(append)
     4800    0.610    0.000   96.210    0.020 path.py:293(get_re_tree)
2597926/2044517    0.591    0.000    0.841    0.000 {len}
   638178    0.505    0.000    1.291    0.000 re.py:459(r_empty_helper)
  1004035    0.469    0.000    0.670    0.000 util.py:97(keys)
   553409    0.454    0.000    1.258    0.000 language.py:357(__eq__)
   389282    0.437    0.000    0.725    0.000 copy.py:66(copy)
52100/39339    0.402    0.000    6.995    0.000 path.py:2111(match_intersect_tree_intersect)
   388281    0.388    0.000    0.785    0.000 classifier.py:231(_commute_test)
   388281    0.383    0.000   12.084    0.000 classifier.py:301(_cross)
  4499301    0.383    0.000    0.383    0.000 {id}
231809/7312    0.357    0.000    3.632    0.000 util.py:142(repr_plus)
   224497    0.349    0.000    0.841    0.000 language.py:446(__repr__)
231809/7312    0.348    0.000    3.661    0.001 language.py:1129(__repr__)
499746/43440    0.323    0.000    3.704    0.000 {repr}
227735/227696    0.317    0.000    1.137    0.000 {map}
    25522    0.306    0.000    0.306    0.000 language.py:328(_get_processed_map)
   306224    0.287    0.000    0.552    0.000 re.py:238(__init__)
   332624    0.283    0.000    0.283    0.000 re.py:182(__init__)
688115/239121    0.282    0.000    3.199    0.000 util.py:145(<genexpr>)
   912612    0.280    0.000    0.280    0.000 util.py:139(<genexpr>)
52726/27149    0.250    0.000    6.265    0.000 path.py:2195(match_intersect_tree_tree_intersect)
   553409    0.250    0.000    0.332    0.000 util.py:134(__len__)
   596408    0.246    0.000    0.389    0.000 re.py:426(is_negated_empty)
   638178    0.242    0.000    0.396    0.000 re.py:423(is_empty)
   306224    0.226    0.000    5.456    0.000 re.py:374(re_sort)
   231809    0.225    0.000    0.997    0.000 util.py:138(indent_str)
  1021596    0.210    0.000    0.210    0.000 {method 'keys' of 'dict' objects}
   388281    0.199    0.000    0.199    0.000 copy.py:113(_copy_with_constructor)
   327109    0.198    0.000   19.325    0.000 re.py:58(__or__)
   286029    0.194    0.000    0.194    0.000 classifier.py:19(__init__)
    91333    0.185    0.000    0.185    0.000 language.py:1112(__init__)
    12761    0.176    0.000    0.356    0.000 language.py:476(translate_virtual_fields)
    56809    0.173    0.000   13.018    0.000 path.py:109(get_overlap_mode)
    25522    0.167    0.000    0.504    0.000 language.py:455(generate_classifier)
    24800    0.166    0.000    0.183    0.000 re.py:210(__init__)
  1117168    0.142    0.000    0.142    0.000 {method 'append' of 'collections.deque' objects}
    29653    0.136    0.000   57.145    0.002 language.py:1299(<lambda>)
   289339    0.133    0.000    0.223    0.000 re.py:241(__eq__)
    29859    0.132    0.000    0.132    0.000 {built-in method __new__ of type object at 0x84a640}
254931/254889    0.128    0.000    0.186    0.000 {hash}
    25659    0.123    0.000    0.596    0.000 language.py:1324(__and__)
   231809    0.112    0.000    0.112    0.000 {method 'splitlines' of 'str' objects}
   140052    0.102    0.000   12.785    0.000 path.py:90(has_nonempty_intersection)
   153298    0.092    0.000    0.119    0.000 language.py:295(__eq__)
   211449    0.090    0.000    0.249    0.000 language.py:412(__hash__)
    51044    0.090    0.000    0.122    0.000 util.py:59(__init__)
    28858    0.088    0.000    0.400    0.000 language.py:1309(__new__)
24066/8022    0.084    0.000    0.377    0.000 path.py:247(new_metadata_tree)
   128611    0.083    0.000    0.096    0.000 {method 'update' of 'dict' objects}
    68189    0.082    0.000    0.082    0.000 re.py:97(__init__)
    57716    0.078    0.000    0.297    0.000 language.py:1318(__init__)
   390283    0.077    0.000    0.077    0.000 {method 'get' of 'dict' objects}
    57716    0.075    0.000    0.212    0.000 language.py:1257(__init__)
   231809    0.072    0.000    0.072    0.000 language.py:138(name)
     4800    0.070    0.000    0.093    0.000 language_tools.py:100(ast_fold)
   234983    0.066    0.000    0.066    0.000 {method 'extend' of 'collections.deque' objects}
    46504    0.062    0.000    0.120    0.000 re.py:159(__init__)
41600/9600    0.060    0.000    0.269    0.000 re.py:486(smart_concat)
    12761    0.060    0.000    1.079    0.000 language.py:450(__init__)
   211449    0.058    0.000    0.058    0.000 util.py:121(__hash__)
    12761    0.052    0.000    1.325    0.000 language.py:352(generate_classifier)
    12761    0.051    0.000    0.096    0.000 runtime.py:1920(vhs_to_num)
    33617    0.045    0.000    0.098    0.000 language.py:204(__invert__)
    12761    0.043    0.000    0.161    0.000 util.py:65(update)
    43440    0.042    0.000    3.774    0.000 language.py:214(__hash__)
    29653    0.040    0.000   42.531    0.001 classifier.py:387(optimize)
17622/9600    0.037    0.000   96.241    0.010 path.py:712(re_tree)
    12761    0.035    0.000    0.134    0.000 runtime.py:1915(compress)
    12761    0.032    0.000    0.032    0.000 {filter}
       41    0.028    0.001   18.490    0.451 path.py:241(__replace_pred__)
29692/28776    0.027    0.000    0.799    0.000 language.py:1117(compile)
    20885    0.024    0.000    0.047    0.000 re.py:146(__init__)
    29572    0.018    0.000    0.023    0.000 classifier.py:118(__len__)
32891/31975    0.017    0.000    0.820    0.000 language.py:1296(<lambda>)
     4800    0.017    0.000   96.289    0.020 path.py:761(re_tree)
     8022    0.016    0.000    0.016    0.000 path.py:720(re_tree)
      800    0.015    0.000   96.560    0.121 path.py:921(re_tree)
    25522    0.015    0.000    0.015    0.000 {method 'iteritems' of 'dict' objects}
    28780    0.015    0.000    0.017    0.000 path.py:82(<lambda>)
     4800    0.014    0.000    0.107    0.000 path.py:577(get_dyn_pols)
    12761    0.013    0.000    0.013    0.000 {method 'copy' of 'dict' objects}
3238/3199    0.011    0.000   57.304    0.018 language.py:1294(generate_classifier)
    20885    0.011    0.000    0.018    0.000 re.py:149(__eq__)
    56163    0.011    0.000    0.011    0.000 language.py:252(intersect)
    12761    0.010    0.000    0.014    0.000 util.py:112(iteritems)
    43440    0.010    0.000    0.010    0.000 language.py:263(__repr__)
   2397/3    0.009    0.000   96.597   32.199 path.py:534(path_policy_ast_fold)
     3199    0.009    0.000    0.072    0.000 language.py:178(__and__)
     3201    0.008    0.000   57.348    0.018 path.py:84(is_not_drop)
 3600/400    0.007    0.000    0.020    0.000 path.py:556(path_ast_fold)
     3201    0.006    0.000   57.310    0.018 path.py:69(__get_classifier__)
    12761    0.006    0.000    0.006    0.000 runtime.py:1962(map_to_vlan)
     9600    0.005    0.000    0.274    0.000 re.py:54(__xor__)
     1001    0.005    0.000    0.008    0.000 copy.py:306(_reconstruct)
     3239    0.004    0.000    0.004    0.000 language.py:224(compile)
     1001    0.004    0.000    0.004    0.000 {method '__reduce_ex__' of 'object' objects}
     3201    0.004    0.000    0.031    0.000 path.py:80(__is_not_drop_classifier__)
       82    0.004    0.000    0.022    0.000 classifier.py:173(__invert__)
     4800    0.004    0.000    0.006    0.000 language_tools.py:144(add_dynamic_sub_pols)
     1600    0.004    0.000   73.992    0.046 path.py:889(re_tree)
     2400    0.004    0.000    0.005    0.000 path.py:765(invalidate_re_tree)
     1600    0.004    0.000    0.007    0.000 re.py:405(smart_star)
     3600    0.003    0.000    0.009    0.000 path.py:1137(inv_atoms)
      799    0.002    0.000    0.197    0.000 path.py:1163(__get_re_pols__)
      799    0.002    0.000   96.368    0.121 path.py:1151(__prep_re_trees__)
     1600    0.002    0.000    0.003    0.000 re.py:262(__init__)
     4800    0.002    0.000    0.002    0.000 path.py:725(invalidate_re_tree)
        1    0.001    0.001   96.598   96.598 stat.py:214(profiled_func)
      799    0.001    0.000    0.022    0.000 path.py:1133(__invalidate_re_trees__)
     1600    0.001    0.000    0.008    0.000 re.py:66(__pos__)
     2002    0.001    0.000    0.001    0.000 {getattr}
     2393    0.001    0.000    0.001    0.000 weakref.py:48(remove)
      800    0.001    0.000    0.002    0.000 re.py:133(__init__)
       85    0.001    0.000    0.095    0.001 path.py:194(__add_pred__)
     1002    0.001    0.000    0.001    0.000 {hasattr}
     1001    0.001    0.000    0.001    0.000 copy_reg.py:92(__newobj__)
       41    0.000    0.000    0.059    0.001 path.py:212(__del_pred__)
    82/59    0.000    0.000    0.750    0.013 language.py:1157(generate_classifier)
       85    0.000    0.000    0.001    0.000 path.py:228(__new_symbol__)
       85    0.000    0.000    0.000    0.000 path.py:222(__new_token__)
        1    0.000    0.000   96.597   96.597 path.py:1190(compile)
       42    0.000    0.000    0.000    0.000 language.py:86(compile)
        2    0.000    0.000    0.000    0.000 language.py:236(generate_classifier)
        1    0.000    0.000   96.598   96.598 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 path.py:371(clear)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        3    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


