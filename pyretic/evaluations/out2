Couldn't import dot_parser, loading of dot files will not be possible.
{'test': 'congested_link', 'm': '10', 'n': '10'}
         52196947 function calls (50871339 primitive calls) in 39.521 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2742079    7.962    0.000   13.459    0.000 language.py:416(map_check)
  3164896    3.174    0.000   17.324    0.000 language.py:413(covers)
  6200618    2.503    0.000    3.556    0.000 util.py:97(keys)
  3290249    2.492    0.000   19.817    0.000 classifier.py:406(<lambda>)
   334151    1.431    0.000    9.669    0.000 classifier.py:292(_cross_act)
542681/38930    1.416    0.000   35.127    0.001 {reduce}
    57470    1.363    0.000   34.692    0.001 classifier.py:226(__rshift__)
   355502    1.295    0.000    1.491    0.000 classifier.py:108(__init__)
  2771418    1.163    0.000    1.727    0.000 util.py:103(items)
  4417609    1.145    0.000    1.145    0.000 {isinstance}
  1532383    1.107    0.000    1.508    0.000 language.py:258(__eq__)
  6211177    1.057    0.000    1.057    0.000 {method 'keys' of 'dict' objects}
   334151    0.968    0.000    2.700    0.000 classifier.py:261(_sequence_actions)
   195058    0.909    0.000    3.077    0.000 language.py:359(intersect)
  3035722    0.835    0.000    0.835    0.000 util.py:118(__getitem__)
    57470    0.634    0.000   22.031    0.000 classifier.py:402(remove_shadowed_cover_single)
   376949    0.585    0.000    1.497    0.000 copy.py:66(copy)
   503751    0.582    0.000    0.840    0.000 classifier.py:157(append)
  2771440    0.564    0.000    0.564    0.000 {method 'items' of 'dict' objects}
2026421/1590113    0.541    0.000    0.775    0.000 {len}
   436308    0.413    0.000    1.140    0.000 language.py:355(__eq__)
   334151    0.396    0.000    0.786    0.000 classifier.py:232(_commute_test)
   334151    0.391    0.000   10.060    0.000 classifier.py:302(_cross)
  3347906    0.324    0.000    0.324    0.000 {id}
    57470    0.287    0.000   34.979    0.001 language.py:1295(<lambda>)
   436308    0.234    0.000    0.311    0.000 util.py:134(__len__)
    42798    0.225    0.000    0.377    0.000 copy.py:306(_reconstruct)
     4609    0.218    0.000    1.134    0.000 classifier.py:174(__invert__)
    42798    0.205    0.000    0.205    0.000 {method '__reduce_ex__' of 'object' objects}
   254671    0.195    0.000    0.195    0.000 classifier.py:20(__init__)
   334151    0.190    0.000    0.190    0.000 copy.py:113(_copy_with_constructor)
    21914    0.173    0.000    0.469    0.000 re.py:353(re_nub)
     1200    0.169    0.000   39.427    0.033 path.py:271(get_re_tree)
    18718    0.142    0.000    0.142    0.000 language.py:326(_get_processed_map)
     9359    0.136    0.000    0.298    0.000 language.py:471(translate_virtual_fields)
18718/9359    0.131    0.000    1.018    0.000 language.py:324(__init__)
    25159    0.125    0.000    1.153    0.000 re.py:433(smart_alter)
91921/3904    0.121    0.000    0.534    0.000 {method 'join' of 'str' objects}
    21914    0.120    0.000    0.348    0.000 {sorted}
    18718    0.118    0.000    0.306    0.000 language.py:450(generate_classifier)
   226296    0.116    0.000    0.151    0.000 re.py:163(__eq__)
   224049    0.113    0.000    0.229    0.000 re.py:350(<lambda>)
   224049    0.111    0.000    0.260    0.000 re.py:87(__ne__)
   770058    0.108    0.000    0.108    0.000 {method 'append' of 'collections.deque' objects}
49081/45672    0.097    0.000   22.697    0.000 {map}
126303/65773    0.095    0.000    0.624    0.000 {repr}
   136388    0.095    0.000    0.105    0.000 {method 'update' of 'dict' objects}
   419747    0.094    0.000    0.094    0.000 {method 'get' of 'dict' objects}
    62360    0.093    0.000    0.093    0.000 {built-in method __new__ of type object at 0x84a640}
    43733    0.091    0.000    0.091    0.000 language.py:1108(__init__)
   224049    0.090    0.000    0.116    0.000 re.py:167(sort_key)
    19385    0.089    0.000   37.180    0.002 path.py:87(has_nonempty_intersection)
   120171    0.076    0.000    0.099    0.000 language.py:293(__eq__)
    57470    0.074    0.000   22.105    0.000 classifier.py:388(optimize)
64114/28358    0.071    0.000   22.572    0.001 language.py:1113(compile)
   213980    0.070    0.000    0.070    0.000 {method 'extend' of 'collections.deque' objects}
    19562    0.066    0.000    0.271    0.000 language.py:1305(__new__)
    37436    0.065    0.000    0.091    0.000 util.py:59(__init__)
19542/16133    0.061    0.000   36.486    0.002 language.py:1290(generate_classifier)
    65773    0.060    0.000    0.699    0.000 language.py:214(__hash__)
    39124    0.059    0.000    0.208    0.000 language.py:1314(__init__)
    39124    0.057    0.000    0.144    0.000 language.py:1253(__init__)
31191/1852    0.056    0.000    0.558    0.000 language.py:1125(__repr__)
31191/1852    0.055    0.000    0.549    0.000 util.py:142(repr_plus)
77012/41256    0.054    0.000   22.613    0.001 language.py:1292(<lambda>)
19517/1012    0.052    0.000    0.988    0.001 path.py:239(replace_node)
    29339    0.051    0.000    0.127    0.000 language.py:441(__repr__)
   271411    0.051    0.000    0.051    0.000 {method 'append' of 'list' objects}
    85596    0.046    0.000    0.046    0.000 {getattr}
     9359    0.046    0.000    0.635    0.000 language.py:445(__init__)
    48298    0.044    0.000    0.110    0.000 re.py:434(r_empty_helper)
   121060    0.042    0.000    0.042    0.000 util.py:139(<genexpr>)
91721/33043    0.041    0.000    0.480    0.000 util.py:145(<genexpr>)
     9359    0.041    0.000    0.824    0.000 language.py:350(generate_classifier)
     9359    0.040    0.000    0.099    0.000 runtime.py:1922(vhs_to_num)
    86145    0.039    0.000    0.048    0.000 path.py:79(<lambda>)
    15808    0.039    0.000    0.322    0.000 language.py:178(__and__)
    31191    0.038    0.000    0.152    0.000 util.py:138(indent_str)
     9359    0.037    0.000    0.121    0.000 util.py:65(update)
     7990    0.037    0.000   37.227    0.005 path.py:95(get_overlap_mode)
    19388    0.037    0.000   36.686    0.002 path.py:81(is_not_drop)
94088/94066    0.034    0.000    0.046    0.000 {hash}
    42799    0.034    0.000    0.034    0.000 {hasattr}
    56097    0.034    0.000    0.044    0.000 classifier.py:119(__len__)
     9359    0.033    0.000    0.033    0.000 {filter}
    19388    0.033    0.000   36.545    0.002 path.py:66(__get_classifier__)
   142346    0.030    0.000    0.030    0.000 language.py:252(intersect)
    42798    0.027    0.000    0.040    0.000 copy_reg.py:92(__newobj__)
    18718    0.026    0.000    0.026    0.000 {method 'iteritems' of 'dict' objects}
   224049    0.026    0.000    0.026    0.000 {ord}
    28514    0.026    0.000    0.026    0.000 re.py:177(__init__)
    21914    0.024    0.000    0.044    0.000 re.py:228(__init__)
     9359    0.023    0.000    0.125    0.000 runtime.py:1917(compress)
    21914    0.021    0.000    0.370    0.000 re.py:349(re_sort)
    48298    0.021    0.000    0.036    0.000 re.py:398(is_empty)
    19388    0.020    0.000    0.105    0.000 path.py:77(__is_not_drop_classifier__)
    10272    0.020    0.000    0.205    0.000 language.py:403(__and__)
10400/2400    0.020    0.000    0.043    0.000 re.py:461(smart_concat)
    41808    0.020    0.000    0.030    0.000 re.py:401(is_negated_empty)
3412/2400    0.019    0.000   39.446    0.016 path.py:692(re_tree)
    10099    0.018    0.000    0.018    0.000 re.py:97(__init__)
    25159    0.018    0.000    1.171    0.000 re.py:58(__or__)
     3754    0.017    0.000    0.102    0.000 language.py:1320(__and__)
    31191    0.017    0.000    0.017    0.000 {method 'splitlines' of 'str' objects}
    28293    0.017    0.000    0.047    0.000 language.py:410(__hash__)
     1200    0.015    0.000    0.021    0.000 language_tools.py:100(ast_fold)
    65773    0.015    0.000    0.015    0.000 language.py:263(__repr__)
     4609    0.015    0.000   22.518    0.005 language.py:1153(generate_classifier)
     6654    0.012    0.000    0.026    0.000 re.py:159(__init__)
    28293    0.011    0.000    0.011    0.000 util.py:121(__hash__)
    31191    0.011    0.000    0.011    0.000 language.py:138(name)
    19669    0.011    0.000    0.019    0.000 re.py:231(__eq__)
3036/1012    0.010    0.000    0.048    0.000 path.py:225(new_metadata_tree)
     6200    0.009    0.000    0.015    0.000 re.py:205(__init__)
     3253    0.009    0.000    0.026    0.000 language.py:284(generate_classifier)
     9359    0.008    0.000    0.011    0.000 util.py:112(iteritems)
     6132    0.008    0.000    0.008    0.000 language.py:224(compile)
     4609    0.007    0.000    0.016    0.000 language.py:204(__invert__)
    11375    0.007    0.000    0.007    0.000 language.py:86(compile)
     9359    0.006    0.000    0.006    0.000 {method 'copy' of 'dict' objects}
      200    0.005    0.000   39.504    0.198 path.py:901(re_tree)
       21    0.004    0.000    1.028    0.049 path.py:219(__replace_pred__)
     1200    0.004    0.000   39.459    0.033 path.py:741(re_tree)
     9359    0.004    0.000    0.004    0.000 runtime.py:1964(map_to_vlan)
     3245    0.004    0.000    0.008    0.000 re.py:146(__init__)
     4600    0.002    0.000    0.003    0.000 re.py:239(<lambda>)
     1200    0.002    0.000    0.023    0.000 path.py:557(get_dyn_pols)
    597/3    0.002    0.000   39.513   13.171 path.py:514(path_policy_ast_fold)
 1100/100    0.002    0.000    0.008    0.000 re.py:219(re_string_repr)
     3245    0.002    0.000    0.003    0.000 re.py:149(__eq__)
  900/100    0.002    0.000    0.005    0.000 path.py:536(path_ast_fold)
     1012    0.002    0.000    0.002    0.000 path.py:700(re_tree)
     2400    0.002    0.000    0.045    0.000 re.py:54(__xor__)
      400    0.001    0.000   32.636    0.082 path.py:869(re_tree)
     1200    0.001    0.000    0.002    0.000 language_tools.py:144(add_dynamic_sub_pols)
      600    0.001    0.000    0.001    0.000 path.py:745(invalidate_re_tree)
      400    0.001    0.000    0.002    0.000 re.py:380(smart_star)
     5600    0.001    0.000    0.001    0.000 re.py:170(re_string_repr)
      199    0.001    0.000    0.027    0.000 path.py:1148(__get_re_pols__)
      900    0.001    0.000    0.002    0.000 path.py:1122(inv_atoms)
      400    0.001    0.000    0.001    0.000 re.py:247(__init__)
      199    0.000    0.000   39.478    0.198 path.py:1136(__prep_re_trees__)
       45    0.000    0.000    0.029    0.001 path.py:178(__add_pred__)
        1    0.000    0.000   39.521   39.521 stat.py:314(profiled_func)
       57    0.000    0.000    0.000    0.000 path.py:151(char_in_lexer_language)
     1200    0.000    0.000    0.000    0.000 path.py:705(invalidate_re_tree)
      616    0.000    0.000    0.000    0.000 weakref.py:48(remove)
      400    0.000    0.000    0.002    0.000 re.py:66(__pos__)
       45    0.000    0.000    0.001    0.000 path.py:205(__new_symbol__)
      200    0.000    0.000    0.005    0.000 re.py:238(re_string_repr)
      199    0.000    0.000    0.005    0.000 path.py:1118(__invalidate_re_trees__)
      200    0.000    0.000    0.000    0.000 re.py:133(__init__)
       57    0.000    0.000    0.000    0.000 path.py:157(char_from_token)
      200    0.000    0.000    0.006    0.000 re.py:259(re_string_repr)
       21    0.000    0.000    0.019    0.001 path.py:195(__del_pred__)
      200    0.000    0.000    0.000    0.000 string.py:308(join)
        1    0.000    0.000   39.520   39.520 path.py:1175(compile)
       63    0.000    0.000    0.000    0.000 language.py:1128(__eq__)
        1    0.000    0.000   39.521   39.521 <string>:1(<module>)
       57    0.000    0.000    0.000    0.000 {unichr}
       45    0.000    0.000    0.000    0.000 {chr}
        2    0.000    0.000    0.000    0.000 language.py:236(generate_classifier)
        2    0.000    0.000    0.000    0.000 path.py:351(clear)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        1    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


