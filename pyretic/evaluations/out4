Couldn't import dot_parser, loading of dot files will not be possible.
{'test': 'congested_link', 'm': '10', 'n': '10'}
         52910386 function calls (51644608 primitive calls) in 44.790 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2742079    8.800    0.000   14.850    0.000 language.py:416(map_check)
  3164896    3.600    0.000   19.215    0.000 language.py:413(covers)
  6200618    2.765    0.000    3.948    0.000 util.py:97(keys)
  3290249    2.685    0.000   21.900    0.000 classifier.py:406(<lambda>)
   334151    1.601    0.000   10.779    0.000 classifier.py:292(_cross_act)
542681/38930    1.590    0.000   38.769    0.001 {reduce}
   370282    1.535    0.000    1.765    0.000 classifier.py:108(__init__)
    57470    1.470    0.000   38.375    0.001 classifier.py:226(__rshift__)
  4536280    1.325    0.000    1.325    0.000 {isinstance}
  1532383    1.257    0.000    1.708    0.000 language.py:258(__eq__)
  2764377    1.250    0.000    1.874    0.000 util.py:103(items)
  6211177    1.187    0.000    1.187    0.000 {method 'keys' of 'dict' objects}
   334151    1.053    0.000    2.969    0.000 classifier.py:261(_sequence_actions)
   195058    1.016    0.000    3.477    0.000 language.py:359(intersect)
  3035722    0.913    0.000    0.913    0.000 util.py:118(__getitem__)
   414472    0.753    0.000    2.405    0.000 copy.py:66(copy)
    57470    0.699    0.000   24.376    0.000 classifier.py:402(remove_shadowed_cover_single)
   503751    0.627    0.000    0.917    0.000 classifier.py:157(append)
  2764399    0.624    0.000    0.624    0.000 {method 'items' of 'dict' objects}
2087213/1650905    0.594    0.000    0.841    0.000 {len}
    19389    0.564    0.000    2.540    0.000 classifier.py:174(__invert__)
    80321    0.480    0.000    0.802    0.000 copy.py:306(_reconstruct)
   436308    0.462    0.000    1.249    0.000 language.py:355(__eq__)
    80321    0.432    0.000    0.432    0.000 {method '__reduce_ex__' of 'object' objects}
   334151    0.412    0.000    0.854    0.000 classifier.py:232(_commute_test)
   334151    0.409    0.000   11.188    0.000 classifier.py:302(_cross)
  3385429    0.354    0.000    0.354    0.000 {id}
    18718    0.270    0.000    0.271    0.000 language.py:326(_get_processed_map)
   436308    0.247    0.000    0.327    0.000 util.py:134(__len__)
    57470    0.233    0.000   38.608    0.001 language.py:1295(<lambda>)
   254671    0.219    0.000    0.219    0.000 classifier.py:20(__init__)
   334151    0.202    0.000    0.202    0.000 copy.py:113(_copy_with_constructor)
    21914    0.185    0.000    0.493    0.000 re.py:353(re_nub)
     1200    0.171    0.000   44.686    0.037 path.py:279(get_re_tree)
18718/9359    0.150    0.000    1.177    0.000 language.py:324(__init__)
     9359    0.148    0.000    0.288    0.000 language.py:471(translate_virtual_fields)
    58534    0.140    0.000    0.140    0.000 language.py:1108(__init__)
   173911    0.139    0.000    0.149    0.000 {method 'update' of 'dict' objects}
   770058    0.139    0.000    0.139    0.000 {method 'append' of 'collections.deque' objects}
    99883    0.127    0.000    0.127    0.000 {built-in method __new__ of type object at 0x84a640}
   226296    0.124    0.000    0.158    0.000 re.py:163(__eq__)
    25159    0.123    0.000    1.194    0.000 re.py:433(smart_alter)
    21914    0.122    0.000    0.357    0.000 {sorted}
   494793    0.117    0.000    0.117    0.000 {method 'get' of 'dict' objects}
   224049    0.117    0.000    0.273    0.000 re.py:87(__ne__)
   224049    0.112    0.000    0.235    0.000 re.py:350(<lambda>)
148269/102258    0.112    0.000    0.572    0.000 {repr}
    18718    0.104    0.000    0.317    0.000 language.py:450(generate_classifier)
   160642    0.099    0.000    0.099    0.000 {getattr}
42040/38631    0.099    0.000   26.647    0.001 {map}
69924/3030    0.098    0.000    0.454    0.000 {method 'join' of 'str' objects}
   102258    0.097    0.000    0.695    0.000 language.py:214(__hash__)
   224049    0.096    0.000    0.123    0.000 re.py:167(sort_key)
     7990    0.093    0.000   42.520    0.005 path.py:95(get_overlap_mode)
    19385    0.091    0.000   42.346    0.002 path.py:87(has_nonempty_intersection)
   120171    0.087    0.000    0.109    0.000 language.py:293(__eq__)
    57470    0.081    0.000   24.457    0.000 classifier.py:388(optimize)
64640/28358    0.080    0.000   26.521    0.001 language.py:1113(compile)
   213980    0.076    0.000    0.076    0.000 {method 'extend' of 'collections.deque' objects}
    80322    0.072    0.000    0.072    0.000 {hasattr}
    37436    0.069    0.000    0.100    0.000 util.py:59(__init__)
19542/16133    0.068    0.000   41.585    0.003 language.py:1290(generate_classifier)
    39124    0.064    0.000    0.148    0.000 language.py:1253(__init__)
    19562    0.062    0.000    0.276    0.000 language.py:1305(__new__)
   308934    0.060    0.000    0.060    0.000 {method 'append' of 'list' objects}
    39124    0.058    0.000    0.211    0.000 language.py:1314(__init__)
19389/16002    0.056    0.000   26.470    0.002 language.py:1153(generate_classifier)
77012/41256    0.055    0.000   26.563    0.001 language.py:1292(<lambda>)
    80321    0.054    0.000    0.086    0.000 copy_reg.py:92(__newobj__)
     9359    0.052    0.000    0.937    0.000 language.py:350(generate_classifier)
19517/1012    0.051    0.000    0.975    0.001 path.py:247(replace_node)
    22298    0.050    0.000    0.113    0.000 language.py:441(__repr__)
23713/1415    0.050    0.000    0.474    0.000 language.py:1125(__repr__)
    86145    0.048    0.000    0.057    0.000 path.py:79(<lambda>)
     9359    0.047    0.000    0.735    0.000 language.py:445(__init__)
    19388    0.046    0.000   41.819    0.002 path.py:81(is_not_drop)
    48298    0.045    0.000    0.120    0.000 re.py:434(r_empty_helper)
23713/1415    0.045    0.000    0.467    0.000 util.py:142(repr_plus)
    15808    0.044    0.000    0.346    0.000 language.py:178(__and__)
     9359    0.042    0.000    0.080    0.000 runtime.py:1922(vhs_to_num)
123510/123488    0.041    0.000    0.051    0.000 {hash}
    92022    0.038    0.000    0.038    0.000 util.py:139(<genexpr>)
    19410    0.034    0.000    0.094    0.000 language.py:204(__invert__)
69724/25128    0.034    0.000    0.410    0.000 util.py:145(<genexpr>)
     9359    0.033    0.000    0.033    0.000 {filter}
     9359    0.033    0.000    0.128    0.000 util.py:65(update)
    19388    0.032    0.000   41.646    0.002 path.py:66(__get_classifier__)
    23713    0.032    0.000    0.129    0.000 util.py:138(indent_str)
    41843    0.031    0.000    0.037    0.000 classifier.py:119(__len__)
   142346    0.030    0.000    0.030    0.000 language.py:252(intersect)
    19388    0.030    0.000    0.127    0.000 path.py:77(__is_not_drop_classifier__)
    28514    0.027    0.000    0.027    0.000 re.py:177(__init__)
   224049    0.027    0.000    0.027    0.000 {ord}
    48298    0.026    0.000    0.039    0.000 re.py:398(is_empty)
    41808    0.025    0.000    0.036    0.000 re.py:401(is_negated_empty)
3412/2400    0.024    0.000   44.709    0.019 path.py:689(re_tree)
    21914    0.023    0.000    0.044    0.000 re.py:228(__init__)
   102258    0.023    0.000    0.023    0.000 language.py:263(__repr__)
10400/2400    0.023    0.000    0.047    0.000 re.py:461(smart_concat)
     6654    0.022    0.000    0.034    0.000 re.py:159(__init__)
     1200    0.021    0.000    0.027    0.000 language_tools.py:100(ast_fold)
     9359    0.020    0.000    0.103    0.000 runtime.py:1917(compress)
    21914    0.020    0.000    0.376    0.000 re.py:349(re_sort)
    10272    0.020    0.000    0.211    0.000 language.py:403(__and__)
    25159    0.019    0.000    1.213    0.000 re.py:58(__or__)
    10099    0.016    0.000    0.016    0.000 re.py:97(__init__)
     3754    0.016    0.000    0.103    0.000 language.py:1320(__and__)
    23713    0.016    0.000    0.016    0.000 {method 'splitlines' of 'str' objects}
    21230    0.013    0.000    0.039    0.000 language.py:410(__hash__)
    19669    0.012    0.000    0.020    0.000 re.py:231(__eq__)
    25031    0.011    0.000    0.011    0.000 language.py:86(compile)
3036/1012    0.011    0.000    0.051    0.000 path.py:233(new_metadata_tree)
     6200    0.011    0.000    0.016    0.000 re.py:205(__init__)
    21230    0.010    0.000    0.010    0.000 util.py:121(__hash__)
     3253    0.009    0.000    0.029    0.000 language.py:284(generate_classifier)
    23713    0.009    0.000    0.009    0.000 language.py:138(name)
     9359    0.008    0.000    0.012    0.000 util.py:112(iteritems)
     6730    0.007    0.000    0.007    0.000 language.py:224(compile)
    18718    0.006    0.000    0.006    0.000 {method 'iteritems' of 'dict' objects}
     9359    0.006    0.000    0.006    0.000 {method 'copy' of 'dict' objects}
      200    0.005    0.000   44.772    0.224 path.py:898(re_tree)
     1200    0.004    0.000   44.724    0.037 path.py:738(re_tree)
     9359    0.004    0.000    0.004    0.000 runtime.py:1964(map_to_vlan)
     3245    0.004    0.000    0.008    0.000 re.py:146(__init__)
       21    0.004    0.000    1.016    0.048 path.py:227(__replace_pred__)
     1200    0.003    0.000    0.029    0.000 path.py:554(get_dyn_pols)
     4600    0.003    0.000    0.003    0.000 re.py:239(<lambda>)
    597/3    0.002    0.000   44.781   14.927 path.py:511(path_policy_ast_fold)
 1100/100    0.002    0.000    0.008    0.000 re.py:219(re_string_repr)
      400    0.002    0.000    0.003    0.000 re.py:380(smart_star)
  900/100    0.002    0.000    0.005    0.000 path.py:533(path_ast_fold)
     3245    0.002    0.000    0.003    0.000 re.py:149(__eq__)
     2400    0.002    0.000    0.048    0.000 re.py:54(__xor__)
     1012    0.002    0.000    0.002    0.000 path.py:697(re_tree)
      400    0.001    0.000   36.730    0.092 path.py:866(re_tree)
     1200    0.001    0.000    0.002    0.000 language_tools.py:144(add_dynamic_sub_pols)
      600    0.001    0.000    0.001    0.000 path.py:742(invalidate_re_tree)
     5600    0.001    0.000    0.001    0.000 re.py:170(re_string_repr)
      900    0.001    0.000    0.002    0.000 path.py:1119(inv_atoms)
      199    0.001    0.000    0.027    0.000 path.py:1145(__get_re_pols__)
      400    0.001    0.000    0.001    0.000 re.py:247(__init__)
      199    0.000    0.000   44.746    0.225 path.py:1133(__prep_re_trees__)
     1200    0.000    0.000    0.000    0.000 path.py:702(invalidate_re_tree)
       45    0.000    0.000    0.001    0.000 path.py:213(__new_symbol__)
       57    0.000    0.000    0.000    0.000 path.py:163(char_in_lexer_language)
      400    0.000    0.000    0.003    0.000 re.py:66(__pos__)
       45    0.000    0.000    0.022    0.000 path.py:190(__add_pred__)
        1    0.000    0.000   44.790   44.790 stat.py:314(profiled_func)
      616    0.000    0.000    0.000    0.000 weakref.py:48(remove)
      200    0.000    0.000    0.006    0.000 re.py:238(re_string_repr)
      199    0.000    0.000    0.005    0.000 path.py:1115(__invalidate_re_trees__)
      200    0.000    0.000    0.000    0.000 re.py:133(__init__)
       57    0.000    0.000    0.000    0.000 path.py:169(char_from_token)
      200    0.000    0.000    0.006    0.000 re.py:259(re_string_repr)
   126/63    0.000    0.000    0.000    0.000 language.py:1128(__eq__)
       21    0.000    0.000    0.014    0.001 path.py:204(__del_pred__)
      200    0.000    0.000    0.000    0.000 string.py:308(join)
        1    0.000    0.000   44.789   44.789 path.py:1172(compile)
        1    0.000    0.000   44.790   44.790 <string>:1(<module>)
       57    0.000    0.000    0.000    0.000 {unichr}
       45    0.000    0.000    0.000    0.000 {chr}
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        2    0.000    0.000    0.000    0.000 language.py:236(generate_classifier)
        2    0.000    0.000    0.000    0.000 path.py:348(clear)
        1    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


