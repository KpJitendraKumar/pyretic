{'test': 'congested_link', 'm': '30', 'n': '30'}
278.745045185
         434114449 function calls (400570642 primitive calls) in 278.750 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
9506327/143793   31.623    0.000   85.229    0.001 path.py:2280(is_not_drop_set)
  1480934   26.229    0.000   71.686    0.000 re.py:378(re_nub)
 40143206   18.628    0.000   23.306    0.000 re.py:163(__eq__)
 40087279   17.017    0.000   40.287    0.000 re.py:87(__ne__)
 40087279   15.519    0.000   22.271    0.000 re.py:375(<lambda>)
  1480934   14.555    0.000   36.825    0.000 {sorted}
 80209771   13.460    0.000   13.460    0.000 {isinstance}
  2597954   12.637    0.000   15.607    0.000 path.py:2257(intersect_set)
  2198199   10.734    0.000   13.551    0.000 path.py:2233(union_set)
3620797/420741    8.780    0.000   31.640    0.000 path.py:2196(match_tree_intersect)
  1545859    8.371    0.000  129.922    0.000 re.py:458(smart_alter)
  9115536    7.509    0.000   20.019    0.000 language.py:357(__eq__)
 40087279    6.751    0.000    6.751    0.000 re.py:167(sort_key)
 13661188    6.679    0.000    6.679    0.000 {method 'items' of 'dict' objects}
19160557/10045021    6.225    0.000   10.055    0.000 {len}
 40182583    5.205    0.000    5.205    0.000 {method 'append' of 'list' objects}
 16613271    4.953    0.000    4.953    0.000 language.py:1132(__eq__)
  2172990    4.843    0.000    7.630    0.000 path.py:2051(match_intersect)
3382795/338683    4.113    0.000   29.699    0.000 path.py:2119(match_neg_tree_intersect)
1423337/27032    3.861    0.000  126.758    0.005 path.py:276(replace_node)
  9115536    3.830    0.000    4.921    0.000 util.py:134(__len__)
2435057/34424    3.249    0.000   14.002    0.000 {method 'join' of 'str' objects}
  1190817    2.745    0.000    4.205    0.000 path.py:2073(match_neg_intersect)
  3037658    2.682    0.000    6.796    0.000 re.py:459(r_empty_helper)
  7917975    2.291    0.000    2.291    0.000 util.py:118(__getitem__)
  4164018    2.191    0.000    3.083    0.000 util.py:103(items)
    10800    1.821    0.000  277.723    0.026 path.py:308(get_re_tree)
127596/87195    1.570    0.000   28.306    0.000 path.py:2154(match_intersect_tree_intersect)
  1480934    1.530    0.000    2.972    0.000 re.py:238(__init__)
  1540334    1.508    0.000    1.508    0.000 re.py:182(__init__)
817423/17212    1.396    0.000   14.252    0.001 util.py:142(repr_plus)
817423/17212    1.381    0.000   14.341    0.001 language.py:1129(__repr__)
   800211    1.374    0.000    3.279    0.000 language.py:446(__repr__)
  2907808    1.317    0.000    2.063    0.000 re.py:426(is_negated_empty)
  3037658    1.265    0.000    2.051    0.000 re.py:423(is_empty)
  1480934    1.238    0.000   38.063    0.000 re.py:374(re_sort)
   800211    1.173    0.000    1.173    0.000 {map}
1656449/38815    1.158    0.000   14.380    0.000 {repr}
   467223    1.153    0.000    1.153    0.000 language.py:1112(__init__)
2435057/834635    1.111    0.000   12.699    0.000 util.py:145(<genexpr>)
  1545859    1.071    0.000  130.993    0.000 re.py:58(__or__)
  3235268    1.061    0.000    1.061    0.000 util.py:139(<genexpr>)
   185897    1.015    0.000    1.015    0.000 {built-in method __new__ of type object at 0x84a640}
   521948    0.994    0.000  120.319    0.000 path.py:92(has_nonempty_intersection)
  3363807    0.892    0.000    0.892    0.000 util.py:94(__contains__)
   817423    0.873    0.000    3.803    0.000 util.py:138(indent_str)
   205771    0.725    0.000  121.291    0.001 path.py:121(get_overlap_mode)
  1425009    0.694    0.000    1.177    0.000 re.py:241(__eq__)
   185897    0.636    0.000    2.979    0.000 language.py:1309(__new__)
   371794    0.579    0.000    2.168    0.000 language.py:1318(__init__)
   371794    0.532    0.000    1.539    0.000 language.py:1257(__init__)
824814/824752    0.519    0.000    0.765    0.000 {hash}
   421994    0.435    0.000    0.573    0.000 language.py:258(__eq__)
   817423    0.414    0.000    0.414    0.000 {method 'splitlines' of 'str' objects}
    86932    0.404    0.000    2.264    0.000 language.py:1324(__and__)
   785937    0.388    0.000    1.068    0.000 language.py:412(__hash__)
    55800    0.351    0.000    0.414    0.000 re.py:210(__init__)
81096/27032    0.332    0.000    1.489    0.000 path.py:262(new_metadata_tree)
   143793    0.316    0.000   85.607    0.001 path.py:2314(is_not_drop)
   216279    0.305    0.000    0.305    0.000 re.py:97(__init__)
   817423    0.281    0.000    0.281    0.000 language.py:138(name)
    98965    0.274    0.000    2.356    0.000 language.py:178(__and__)
   785937    0.246    0.000    0.246    0.000 util.py:121(__hash__)
   149554    0.236    0.000    0.463    0.000 re.py:159(__init__)
93600/21600    0.171    0.000    0.658    0.000 re.py:486(smart_concat)
    95429    0.164    0.000    0.355    0.000 language.py:204(__invert__)
    10800    0.151    0.000    0.203    0.000 language_tools.py:100(ast_fold)
       61    0.118    0.002  127.207    2.085 path.py:256(__replace_pred__)
   843988    0.103    0.000    0.103    0.000 {id}
48632/21600    0.091    0.000  277.792    0.013 path.py:727(re_tree)
    64925    0.080    0.000    0.155    0.000 re.py:146(__init__)
    42586    0.067    0.000    0.602    0.000 path.py:85(is_not_drop)
    27032    0.066    0.000    0.066    0.000 path.py:735(re_tree)
    97381    0.062    0.000    0.062    0.000 {method 'values' of 'dict' objects}
     1799    0.059    0.000    0.105    0.000 path.py:1148(__invalidate_re_trees__)
    38815    0.045    0.000   14.510    0.000 language.py:214(__hash__)
    10800    0.041    0.000  277.914    0.026 path.py:776(re_tree)
     1800    0.041    0.000  278.582    0.155 path.py:936(re_tree)
    64925    0.035    0.000    0.058    0.000 re.py:149(__eq__)
    10800    0.033    0.000    0.236    0.000 path.py:592(get_dyn_pols)
   5397/3    0.033    0.000  278.745   92.915 path.py:549(path_policy_ast_fold)
    10800    0.020    0.000    0.020    0.000 {method 'keys' of 'dict' objects}
 8100/900    0.017    0.000    0.044    0.000 path.py:571(path_ast_fold)
     1799    0.016    0.000    0.232    0.000 path.py:1178(__get_re_pols__)
    21600    0.015    0.000    0.672    0.000 re.py:54(__xor__)
     3600    0.010    0.000  134.698    0.037 path.py:904(re_tree)
    38815    0.009    0.000    0.009    0.000 language.py:263(__repr__)
    10800    0.009    0.000    0.014    0.000 language_tools.py:144(add_dynamic_sub_pols)
     5400    0.009    0.000    0.012    0.000 path.py:780(invalidate_re_tree)
     3600    0.008    0.000    0.018    0.000 re.py:405(smart_star)
     8100    0.006    0.000    0.021    0.000 path.py:1152(inv_atoms)
     3600    0.005    0.000    0.008    0.000 re.py:262(__init__)
        1    0.005    0.005  278.750  278.750 stat.py:214(profiled_func)
     1799    0.005    0.000  278.372    0.155 path.py:1166(__prep_re_trees__)
    10800    0.004    0.000    0.004    0.000 path.py:740(invalidate_re_tree)
     5410    0.003    0.000    0.003    0.000 weakref.py:48(remove)
     3600    0.003    0.000    0.021    0.000 re.py:66(__pos__)
     1800    0.002    0.000    0.005    0.000 re.py:133(__init__)
      125    0.001    0.000    0.203    0.002 path.py:209(__add_pred__)
       61    0.001    0.000    0.134    0.002 path.py:227(__del_pred__)
      125    0.000    0.000    0.001    0.000 path.py:243(__new_symbol__)
      125    0.000    0.000    0.000    0.000 path.py:237(__new_token__)
        1    0.000    0.000  278.745  278.745 path.py:1205(compile)
        2    0.000    0.000    0.000    0.000 path.py:386(clear)
        1    0.000    0.000  278.750  278.750 <string>:1(<module>)
        3    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


