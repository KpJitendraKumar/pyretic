{'test': 'congested_link', 'm': '15', 'n': '15'}
18.9172558784
         26197124 function calls (23002325 primitive calls) in 18.918 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
793628/22184    2.360    0.000    6.300    0.000 path.py:2280(is_not_drop_set)
   101394    0.999    0.000    2.710    0.000 re.py:378(re_nub)
   216573    0.991    0.000    1.175    0.000 path.py:2257(intersect_set)
  4846973    0.958    0.000    0.958    0.000 {isinstance}
307840/57053    0.777    0.000    2.776    0.000 path.py:2196(match_tree_intersect)
  1467636    0.685    0.000    0.878    0.000 re.py:163(__eq__)
  1460369    0.637    0.000    1.511    0.000 re.py:87(__ne__)
   185868    0.623    0.000    0.788    0.000 path.py:2233(union_set)
   101394    0.623    0.000    1.500    0.000 {sorted}
  1460369    0.607    0.000    0.877    0.000 re.py:375(<lambda>)
   733910    0.573    0.000    1.599    0.000 language.py:357(__eq__)
   110909    0.532    0.000    5.621    0.000 re.py:458(smart_alter)
1599580/865670    0.515    0.000    0.832    0.000 {len}
369310/10084    0.472    0.000    2.141    0.000 {method 'join' of 'str' objects}
  1179674    0.434    0.000    0.434    0.000 {method 'items' of 'dict' objects}
  1390705    0.420    0.000    0.420    0.000 language.py:1132(__eq__)
   155732    0.359    0.000    0.565    0.000 path.py:2051(match_intersect)
274728/46749    0.349    0.000    2.498    0.000 path.py:2119(match_neg_tree_intersect)
   733910    0.317    0.000    0.407    0.000 util.py:134(__len__)
   115386    0.275    0.000    0.424    0.000 path.py:2073(match_neg_intersect)
  1460369    0.271    0.000    0.271    0.000 re.py:167(sort_key)
     2700    0.244    0.000   18.746    0.007 path.py:308(get_re_tree)
93747/3392    0.229    0.000    5.186    0.002 path.py:276(replace_node)
124784/5042    0.218    0.000    2.215    0.000 language.py:1129(__repr__)
124784/5042    0.215    0.000    2.190    0.000 util.py:142(repr_plus)
   390860    0.215    0.000    0.300    0.000 util.py:103(items)
   119742    0.208    0.000    0.505    0.000 language.py:446(__repr__)
  1474043    0.204    0.000    0.204    0.000 {method 'append' of 'list' objects}
   637173    0.187    0.000    0.187    0.000 util.py:118(__getitem__)
254971/10445    0.185    0.000    2.225    0.000 {repr}
   119742    0.185    0.000    0.185    0.000 {map}
   489052    0.178    0.000    0.178    0.000 util.py:139(<genexpr>)
   215038    0.176    0.000    0.453    0.000 re.py:459(r_empty_helper)
369310/129826    0.171    0.000    1.932    0.000 util.py:145(<genexpr>)
    66443    0.143    0.000    0.143    0.000 language.py:1112(__init__)
   124784    0.141    0.000    0.606    0.000 util.py:138(indent_str)
    72335    0.137    0.000    9.543    0.000 path.py:92(has_nonempty_intersection)
18137/11885    0.136    0.000    2.317    0.000 path.py:2154(match_intersect_tree_intersect)
    26352    0.116    0.000    0.116    0.000 {built-in method __new__ of type object at 0x84a640}
   116244    0.108    0.000    0.108    0.000 re.py:182(__init__)
   101394    0.103    0.000    0.198    0.000 re.py:238(__init__)
    28680    0.102    0.000    9.678    0.000 path.py:121(get_overlap_mode)
   215038    0.089    0.000    0.142    0.000 re.py:423(is_empty)
   196008    0.086    0.000    0.135    0.000 re.py:426(is_negated_empty)
   101394    0.082    0.000    1.582    0.000 re.py:374(re_sort)
    52704    0.082    0.000    0.284    0.000 language.py:1318(__init__)
    26352    0.079    0.000    0.368    0.000 language.py:1309(__new__)
   110909    0.074    0.000    5.695    0.000 re.py:58(__or__)
   271118    0.074    0.000    0.074    0.000 util.py:94(__contains__)
    52704    0.072    0.000    0.196    0.000 language.py:1257(__init__)
115610/115578    0.071    0.000    0.104    0.000 {hash}
   124784    0.066    0.000    0.066    0.000 {method 'splitlines' of 'str' objects}
    64102    0.063    0.000    0.084    0.000 language.py:258(__eq__)
   105133    0.050    0.000    0.139    0.000 language.py:412(__hash__)
    11747    0.048    0.000    0.272    0.000 language.py:1324(__and__)
   124784    0.047    0.000    0.047    0.000 language.py:138(name)
    94129    0.047    0.000    0.077    0.000 re.py:241(__eq__)
23400/5400    0.046    0.000    0.103    0.000 re.py:486(smart_concat)
    22184    0.045    0.000    6.354    0.000 path.py:2314(is_not_drop)
    30519    0.039    0.000    0.039    0.000 re.py:97(__init__)
    14605    0.037    0.000    0.309    0.000 language.py:178(__and__)
     2700    0.035    0.000    0.048    0.000 language_tools.py:100(ast_fold)
10176/3392    0.034    0.000    0.154    0.000 path.py:262(new_metadata_tree)
   105133    0.032    0.000    0.032    0.000 util.py:121(__hash__)
    20554    0.031    0.000    0.060    0.000 re.py:159(__init__)
    13950    0.024    0.000    0.037    0.000 re.py:210(__init__)
    13739    0.022    0.000    0.047    0.000 language.py:204(__invert__)
8792/5400    0.016    0.000   18.759    0.003 path.py:727(re_tree)
   128204    0.016    0.000    0.016    0.000 {id}
       31    0.013    0.000    5.274    0.170 path.py:256(__replace_pred__)
    10445    0.012    0.000    2.251    0.000 language.py:214(__hash__)
     9515    0.011    0.000    0.021    0.000 re.py:146(__init__)
     6902    0.010    0.000    0.091    0.000 path.py:85(is_not_drop)
      450    0.009    0.000   18.894    0.042 path.py:936(re_tree)
     2700    0.009    0.000   18.790    0.007 path.py:776(re_tree)
    16748    0.009    0.000    0.009    0.000 {method 'values' of 'dict' objects}
     2700    0.006    0.000    0.055    0.000 path.py:592(get_dyn_pols)
   1347/3    0.006    0.000   18.917    6.306 path.py:549(path_policy_ast_fold)
     3392    0.006    0.000    0.006    0.000 path.py:735(re_tree)
     9515    0.005    0.000    0.008    0.000 re.py:149(__eq__)
 2025/225    0.005    0.000    0.012    0.000 path.py:571(path_ast_fold)
     5400    0.004    0.000    0.106    0.000 re.py:54(__xor__)
     2700    0.003    0.000    0.003    0.000 {method 'keys' of 'dict' objects}
      900    0.003    0.000   10.908    0.012 path.py:904(re_tree)
    10445    0.002    0.000    0.002    0.000 language.py:263(__repr__)
     2700    0.002    0.000    0.004    0.000 language_tools.py:144(add_dynamic_sub_pols)
     1350    0.002    0.000    0.003    0.000 path.py:780(invalidate_re_tree)
      449    0.002    0.000    0.065    0.000 path.py:1178(__get_re_pols__)
      900    0.002    0.000    0.005    0.000 re.py:405(smart_star)
     2025    0.002    0.000    0.005    0.000 path.py:1152(inv_atoms)
     1358    0.001    0.000    0.001    0.000 weakref.py:48(remove)
      900    0.001    0.000    0.002    0.000 re.py:262(__init__)
     2700    0.001    0.000    0.001    0.000 path.py:740(invalidate_re_tree)
      449    0.001    0.000   18.832    0.042 path.py:1166(__prep_re_trees__)
      449    0.001    0.000    0.013    0.000 path.py:1148(__invalidate_re_trees__)
      900    0.001    0.000    0.005    0.000 re.py:66(__pos__)
      450    0.001    0.000    0.001    0.000 re.py:133(__init__)
        1    0.001    0.001   18.918   18.918 stat.py:214(profiled_func)
       65    0.001    0.000    0.060    0.001 path.py:209(__add_pred__)
       31    0.000    0.000    0.036    0.001 path.py:227(__del_pred__)
       65    0.000    0.000    0.000    0.000 path.py:243(__new_symbol__)
       65    0.000    0.000    0.000    0.000 path.py:237(__new_token__)
        1    0.000    0.000   18.917   18.917 path.py:1205(compile)
        2    0.000    0.000    0.000    0.000 path.py:386(clear)
        1    0.000    0.000   18.918   18.918 <string>:1(<module>)
        3    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


