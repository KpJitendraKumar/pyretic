Couldn't import dot_parser, loading of dot files will not be possible.
{'test': 'congested_link', 'm': '10', 'n': '10'}
         43960955 function calls (42635347 primitive calls) in 34.275 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2742079    4.992    0.000    8.119    0.000 language.py:432(map_check)
  3164896    3.570    0.000   12.416    0.000 language.py:415(covers)
  3290249    2.547    0.000   14.963    0.000 classifier.py:406(<lambda>)
   334151    1.461    0.000    9.571    0.000 classifier.py:292(_cross_act)
542681/38930    1.429    0.000   30.052    0.001 {reduce}
   352250    1.347    0.000    1.550    0.000 classifier.py:108(__init__)
    57470    1.334    0.000   29.689    0.001 classifier.py:226(__rshift__)
  2771418    1.202    0.000    1.794    0.000 util.py:103(items)
  4411105    1.142    0.000    1.142    0.000 {isinstance}
  1532383    1.080    0.000    1.470    0.000 language.py:258(__eq__)
   334151    0.924    0.000    2.614    0.000 classifier.py:261(_sequence_actions)
   195058    0.892    0.000    3.019    0.000 language.py:361(intersect)
  3035722    0.784    0.000    0.784    0.000 util.py:118(__getitem__)
  2742079    0.660    0.000    0.660    0.000 util.py:94(__contains__)
    57470    0.635    0.000   17.196    0.000 classifier.py:402(remove_shadowed_cover_single)
  2771440    0.592    0.000    0.592    0.000 {method 'items' of 'dict' objects}
   503751    0.557    0.000    0.805    0.000 classifier.py:157(append)
   376949    0.551    0.000    1.463    0.000 copy.py:66(copy)
2029673/1593365    0.541    0.000    0.766    0.000 {len}
   436308    0.402    0.000    1.126    0.000 language.py:357(__eq__)
   334151    0.379    0.000    9.950    0.000 classifier.py:302(_cross)
   716460    0.375    0.000    0.557    0.000 util.py:97(keys)
   334151    0.371    0.000    0.757    0.000 classifier.py:232(_commute_test)
  3347906    0.317    0.000    0.317    0.000 {id}
   436308    0.225    0.000    0.299    0.000 util.py:134(__len__)
    42798    0.222    0.000    0.376    0.000 copy.py:306(_reconstruct)
    57470    0.211    0.000   29.900    0.001 language.py:1318(<lambda>)
    42798    0.200    0.000    0.200    0.000 {method '__reduce_ex__' of 'object' objects}
   334151    0.192    0.000    0.192    0.000 copy.py:113(_copy_with_constructor)
   251419    0.185    0.000    0.185    0.000 classifier.py:20(__init__)
   727019    0.185    0.000    0.185    0.000 {method 'keys' of 'dict' objects}
     4609    0.182    0.000    1.080    0.000 classifier.py:174(__invert__)
    21914    0.167    0.000    0.453    0.000 re.py:353(re_nub)
     1200    0.163    0.000   34.183    0.028 path.py:271(get_re_tree)
    18718    0.143    0.000    0.327    0.000 language.py:473(generate_classifier)
     9359    0.133    0.000    0.282    0.000 language.py:494(translate_virtual_fields)
18718/9359    0.132    0.000    0.988    0.000 language.py:326(__init__)
    25159    0.118    0.000    1.098    0.000 re.py:433(smart_alter)
91921/3904    0.117    0.000    0.538    0.000 {method 'join' of 'str' objects}
    21914    0.116    0.000    0.328    0.000 {sorted}
   226296    0.112    0.000    0.147    0.000 re.py:163(__eq__)
   770058    0.108    0.000    0.108    0.000 {method 'append' of 'collections.deque' objects}
    18718    0.106    0.000    0.106    0.000 language.py:328(_get_processed_map)
   224049    0.106    0.000    0.251    0.000 re.py:87(__ne__)
   224049    0.102    0.000    0.212    0.000 re.py:350(<lambda>)
49081/45672    0.101    0.000   19.362    0.000 {map}
   419747    0.095    0.000    0.095    0.000 {method 'get' of 'dict' objects}
   136388    0.093    0.000    0.103    0.000 {method 'update' of 'dict' objects}
    62360    0.093    0.000    0.093    0.000 {built-in method __new__ of type object at 0x84a640}
    43733    0.091    0.000    0.091    0.000 language.py:1131(__init__)
126303/65773    0.091    0.000    0.624    0.000 {repr}
   224049    0.084    0.000    0.109    0.000 re.py:167(sort_key)
    19385    0.084    0.000   31.998    0.002 path.py:87(has_nonempty_intersection)
    57470    0.075    0.000   17.271    0.000 classifier.py:388(optimize)
   120171    0.075    0.000    0.096    0.000 language.py:295(__eq__)
64114/28358    0.069    0.000   19.234    0.001 language.py:1136(compile)
   213980    0.066    0.000    0.066    0.000 {method 'extend' of 'collections.deque' objects}
    37436    0.063    0.000    0.090    0.000 util.py:59(__init__)
    65773    0.061    0.000    0.699    0.000 language.py:214(__hash__)
    19562    0.060    0.000    0.258    0.000 language.py:1328(__new__)
31191/1852    0.059    0.000    0.563    0.000 language.py:1148(__repr__)
    39124    0.059    0.000    0.204    0.000 language.py:1337(__init__)
19542/16133    0.058    0.000   31.344    0.002 language.py:1313(generate_classifier)
31191/1852    0.056    0.000    0.553    0.000 util.py:142(repr_plus)
    39124    0.055    0.000    0.141    0.000 language.py:1276(__init__)
    29339    0.053    0.000    0.130    0.000 language.py:464(__repr__)
77012/41256    0.052    0.000   19.273    0.000 language.py:1315(<lambda>)
19517/1012    0.049    0.000    0.935    0.001 path.py:239(replace_node)
   271411    0.048    0.000    0.048    0.000 {method 'append' of 'list' objects}
    85596    0.048    0.000    0.048    0.000 {getattr}
     9359    0.046    0.000    0.612    0.000 language.py:468(__init__)
    86145    0.043    0.000    0.051    0.000 path.py:79(<lambda>)
91721/33043    0.043    0.000    0.487    0.000 util.py:145(<genexpr>)
   121060    0.042    0.000    0.042    0.000 util.py:139(<genexpr>)
     9359    0.042    0.000    0.831    0.000 language.py:352(generate_classifier)
    48298    0.041    0.000    0.101    0.000 re.py:434(r_empty_helper)
    15808    0.041    0.000    0.315    0.000 language.py:178(__and__)
     9359    0.040    0.000    0.092    0.000 runtime.py:1922(vhs_to_num)
     7990    0.036    0.000   32.044    0.004 path.py:95(get_overlap_mode)
    42799    0.035    0.000    0.035    0.000 {hasattr}
    31191    0.035    0.000    0.148    0.000 util.py:138(indent_str)
    59349    0.034    0.000    0.043    0.000 classifier.py:119(__len__)
94088/94066    0.032    0.000    0.043    0.000 {hash}
    19388    0.032    0.000   31.517    0.002 path.py:81(is_not_drop)
   142346    0.031    0.000    0.031    0.000 language.py:252(intersect)
     9359    0.031    0.000    0.112    0.000 util.py:65(update)
    19388    0.031    0.000   31.377    0.002 path.py:66(__get_classifier__)
     9359    0.029    0.000    0.029    0.000 {filter}
    42798    0.027    0.000    0.041    0.000 copy_reg.py:92(__newobj__)
    28514    0.026    0.000    0.026    0.000 re.py:177(__init__)
   224049    0.025    0.000    0.025    0.000 {ord}
    18718    0.024    0.000    0.024    0.000 {method 'iteritems' of 'dict' objects}
    21914    0.022    0.000    0.042    0.000 re.py:228(__init__)
     9359    0.021    0.000    0.115    0.000 runtime.py:1917(compress)
    10272    0.021    0.000    0.206    0.000 language.py:405(__and__)
    19388    0.020    0.000    0.108    0.000 path.py:77(__is_not_drop_classifier__)
    48298    0.020    0.000    0.032    0.000 re.py:398(is_empty)
    21914    0.020    0.000    0.348    0.000 re.py:349(re_sort)
10400/2400    0.019    0.000    0.042    0.000 re.py:461(smart_concat)
3412/2400    0.018    0.000   34.200    0.014 path.py:692(re_tree)
    41808    0.018    0.000    0.028    0.000 re.py:401(is_negated_empty)
    25159    0.018    0.000    1.116    0.000 re.py:58(__or__)
    31191    0.017    0.000    0.017    0.000 {method 'splitlines' of 'str' objects}
     3754    0.017    0.000    0.099    0.000 language.py:1343(__and__)
    10099    0.016    0.000    0.016    0.000 re.py:97(__init__)
    65773    0.015    0.000    0.015    0.000 language.py:263(__repr__)
    28293    0.015    0.000    0.044    0.000 language.py:412(__hash__)
     1200    0.015    0.000    0.021    0.000 language_tools.py:100(ast_fold)
     4609    0.015    0.000   19.180    0.004 language.py:1176(generate_classifier)
     6654    0.012    0.000    0.024    0.000 re.py:159(__init__)
    31191    0.012    0.000    0.012    0.000 language.py:138(name)
    28293    0.011    0.000    0.011    0.000 util.py:121(__hash__)
3036/1012    0.010    0.000    0.046    0.000 path.py:225(new_metadata_tree)
    19669    0.010    0.000    0.016    0.000 re.py:231(__eq__)
     6200    0.010    0.000    0.015    0.000 re.py:205(__init__)
     9359    0.008    0.000    0.011    0.000 util.py:112(iteritems)
     1200    0.008    0.000    0.029    0.000 path.py:557(get_dyn_pols)
     6132    0.007    0.000    0.007    0.000 language.py:224(compile)
     4609    0.007    0.000    0.017    0.000 language.py:204(__invert__)
    11375    0.006    0.000    0.006    0.000 language.py:86(compile)
     9359    0.006    0.000    0.006    0.000 {method 'copy' of 'dict' objects}
     1200    0.005    0.000   34.214    0.029 path.py:741(re_tree)
      200    0.004    0.000   34.257    0.171 path.py:901(re_tree)
     9359    0.004    0.000    0.004    0.000 runtime.py:1964(map_to_vlan)
     3245    0.004    0.000    0.008    0.000 re.py:146(__init__)
       21    0.004    0.000    0.974    0.046 path.py:219(__replace_pred__)
     4600    0.002    0.000    0.003    0.000 re.py:239(<lambda>)
    597/3    0.002    0.000   34.267   11.422 path.py:514(path_policy_ast_fold)
 1100/100    0.002    0.000    0.008    0.000 re.py:219(re_string_repr)
     3245    0.002    0.000    0.003    0.000 re.py:149(__eq__)
  900/100    0.002    0.000    0.005    0.000 path.py:536(path_ast_fold)
     2400    0.002    0.000    0.044    0.000 re.py:54(__xor__)
     1012    0.002    0.000    0.002    0.000 path.py:700(re_tree)
      400    0.001    0.000   28.234    0.071 path.py:869(re_tree)
     1200    0.001    0.000    0.002    0.000 language_tools.py:144(add_dynamic_sub_pols)
     5600    0.001    0.000    0.001    0.000 re.py:170(re_string_repr)
      600    0.001    0.000    0.001    0.000 path.py:745(invalidate_re_tree)
      400    0.001    0.000    0.002    0.000 re.py:380(smart_star)
      900    0.001    0.000    0.002    0.000 path.py:1122(inv_atoms)
      199    0.001    0.000    0.024    0.000 path.py:1148(__get_re_pols__)
      400    0.001    0.000    0.001    0.000 re.py:247(__init__)
      199    0.001    0.000   34.234    0.172 path.py:1136(__prep_re_trees__)
       45    0.000    0.000    0.031    0.001 path.py:178(__add_pred__)
       57    0.000    0.000    0.000    0.000 path.py:151(char_in_lexer_language)
        1    0.000    0.000   34.275   34.275 stat.py:314(profiled_func)
      400    0.000    0.000    0.002    0.000 re.py:66(__pos__)
     1200    0.000    0.000    0.000    0.000 path.py:705(invalidate_re_tree)
       45    0.000    0.000    0.001    0.000 path.py:205(__new_symbol__)
      617    0.000    0.000    0.000    0.000 weakref.py:48(remove)
      199    0.000    0.000    0.006    0.000 path.py:1118(__invalidate_re_trees__)
      200    0.000    0.000    0.005    0.000 re.py:238(re_string_repr)
      200    0.000    0.000    0.000    0.000 re.py:133(__init__)
       57    0.000    0.000    0.000    0.000 path.py:157(char_from_token)
      200    0.000    0.000    0.006    0.000 re.py:259(re_string_repr)
       21    0.000    0.000    0.018    0.001 path.py:195(__del_pred__)
       63    0.000    0.000    0.000    0.000 language.py:1151(__eq__)
      200    0.000    0.000    0.000    0.000 string.py:308(join)
        1    0.000    0.000   34.275   34.275 path.py:1175(compile)
        1    0.000    0.000   34.275   34.275 <string>:1(<module>)
       57    0.000    0.000    0.000    0.000 {unichr}
       45    0.000    0.000    0.000    0.000 {chr}
        2    0.000    0.000    0.000    0.000 language.py:236(generate_classifier)
        2    0.000    0.000    0.000    0.000 path.py:351(clear)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        1    0.000    0.000    0.000    0.000 language.py:284(generate_classifier)
        1    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


