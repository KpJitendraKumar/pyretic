Couldn't import dot_parser, loading of dot files will not be possible.
{'test': 'congested_link', 'm': '10', 'n': '10'}
         68084347 function calls (66496647 primitive calls) in 53.478 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  3418076   10.004    0.000   16.882    0.000 language.py:416(map_check)
  3945580    4.068    0.000   21.831    0.000 language.py:413(covers)
  4101011    3.318    0.000   25.149    0.000 classifier.py:406(<lambda>)
  7802731    3.210    0.000    4.554    0.000 util.py:97(keys)
   461363    1.976    0.000   13.398    0.000 classifier.py:292(_cross_act)
689505/59292    1.864    0.000   45.750    0.001 {reduce}
   479635    1.753    0.000    2.025    0.000 classifier.py:108(__init__)
    73373    1.726    0.000   45.215    0.001 classifier.py:226(__rshift__)
  6025001    1.625    0.000    1.625    0.000 {isinstance}
  2037469    1.513    0.000    2.051    0.000 language.py:258(__eq__)
  3440374    1.434    0.000    2.140    0.000 util.py:103(items)
  7816150    1.349    0.000    1.349    0.000 {method 'keys' of 'dict' objects}
   272985    1.318    0.000    4.405    0.000 language.py:359(intersect)
   461363    1.316    0.000    3.741    0.000 classifier.py:261(_sequence_actions)
   595667    1.064    0.000    3.588    0.000 copy.py:66(copy)
  3857151    1.031    0.000    1.031    0.000 util.py:118(__getitem__)
    73373    0.810    0.000   28.010    0.000 classifier.py:402(remove_shadowed_cover_single)
    29570    0.794    0.000    3.876    0.000 classifier.py:174(__invert__)
2883467/2257923    0.768    0.000    1.099    0.000 {len}
   630213    0.727    0.000    1.055    0.000 classifier.py:157(append)
   134304    0.725    0.000    1.228    0.000 copy.py:306(_reconstruct)
  3440396    0.706    0.000    0.706    0.000 {method 'items' of 'dict' objects}
   134304    0.686    0.000    0.686    0.000 {method '__reduce_ex__' of 'object' objects}
   625544    0.592    0.000    1.634    0.000 language.py:355(__eq__)
   461363    0.544    0.000    1.096    0.000 classifier.py:232(_commute_test)
   461363    0.532    0.000   13.930    0.000 classifier.py:302(_cross)
  4580716    0.451    0.000    0.451    0.000 {id}
   625544    0.331    0.000    0.436    0.000 util.py:134(__len__)
    73373    0.300    0.000   45.515    0.001 language.py:1295(<lambda>)
    24438    0.265    0.000    0.265    0.000 language.py:326(_get_processed_map)
   461363    0.263    0.000    0.263    0.000 copy.py:113(_copy_with_constructor)
   327757    0.251    0.000    0.251    0.000 classifier.py:20(__init__)
    89077    0.201    0.000    0.201    0.000 language.py:1108(__init__)
   256494    0.181    0.000    0.193    0.000 {method 'update' of 'dict' objects}
   268608    0.180    0.000    0.180    0.000 {getattr}
   164047    0.177    0.000    0.177    0.000 {built-in method __new__ of type object at 0x84a640}
    21914    0.176    0.000    0.473    0.000 re.py:353(re_nub)
    12219    0.173    0.000    0.360    0.000 language.py:471(translate_virtual_fields)
24438/12219    0.169    0.000    1.394    0.000 language.py:324(__init__)
   729971    0.167    0.000    0.167    0.000 {method 'get' of 'dict' objects}
207972/161961    0.151    0.000    0.591    0.000 {repr}
   161961    0.146    0.000    0.767    0.000 language.py:214(__hash__)
    29566    0.143    0.000   51.062    0.002 path.py:87(has_nonempty_intersection)
     1200    0.143    0.000   53.373    0.044 path.py:262(get_re_tree)
   955464    0.139    0.000    0.139    0.000 {method 'append' of 'collections.deque' objects}
    24438    0.134    0.000    0.415    0.000 language.py:450(generate_classifier)
     7990    0.134    0.000   51.327    0.006 path.py:95(get_overlap_mode)
    25159    0.128    0.000    1.166    0.000 re.py:433(smart_alter)
    21914    0.128    0.000    0.354    0.000 {sorted}
   185737    0.119    0.000    0.155    0.000 language.py:293(__eq__)
   226296    0.118    0.000    0.153    0.000 re.py:163(__eq__)
   134305    0.115    0.000    0.115    0.000 {hasattr}
52221/48812    0.113    0.000   25.928    0.001 {map}
   224049    0.109    0.000    0.260    0.000 re.py:87(__ne__)
   224049    0.109    0.000    0.226    0.000 re.py:350(<lambda>)
87095/47449    0.106    0.000   25.763    0.001 language.py:1113(compile)
    73373    0.102    0.000   28.112    0.000 classifier.py:388(optimize)
69924/3030    0.097    0.000    0.420    0.000 {method 'join' of 'str' objects}
29723/26314    0.096    0.000   49.981    0.002 language.py:1290(generate_classifier)
   275626    0.093    0.000    0.093    0.000 {method 'extend' of 'collections.deque' objects}
    59486    0.092    0.000    0.294    0.000 language.py:1314(__init__)
   224049    0.092    0.000    0.117    0.000 re.py:167(sort_key)
   134304    0.091    0.000    0.135    0.000 copy_reg.py:92(__newobj__)
    29743    0.090    0.000    0.389    0.000 language.py:1305(__new__)
    48876    0.085    0.000    0.121    0.000 util.py:59(__init__)
    59486    0.083    0.000    0.195    0.000 language.py:1253(__init__)
29570/26183    0.078    0.000   25.683    0.001 language.py:1153(generate_classifier)
103096/67340    0.076    0.000   25.828    0.000 language.py:1292(<lambda>)
   362917    0.073    0.000    0.073    0.000 {method 'append' of 'list' objects}
   146050    0.068    0.000    0.082    0.000 path.py:79(<lambda>)
    25661    0.065    0.000    0.518    0.000 language.py:178(__and__)
    12219    0.063    0.000    0.103    0.000 runtime.py:1845(vhs_to_num)
    12219    0.058    0.000    0.856    0.000 language.py:445(__init__)
    29569    0.056    0.000   50.289    0.002 path.py:81(is_not_drop)
    12219    0.054    0.000    1.127    0.000 language.py:350(generate_classifier)
19517/1012    0.052    0.000    1.005    0.001 path.py:230(replace_node)
    29569    0.048    0.000   50.057    0.002 path.py:66(__get_classifier__)
    48298    0.045    0.000    0.111    0.000 re.py:434(r_empty_helper)
    29591    0.045    0.000    0.141    0.000 language.py:204(__invert__)
23713/1415    0.045    0.000    0.439    0.000 language.py:1125(__repr__)
183213/183191    0.044    0.000    0.053    0.000 {hash}
    12219    0.043    0.000    0.150    0.000 util.py:65(update)
23713/1415    0.042    0.000    0.431    0.000 util.py:142(repr_plus)
   191631    0.042    0.000    0.042    0.000 language.py:252(intersect)
    22298    0.041    0.000    0.099    0.000 language.py:441(__repr__)
   161961    0.036    0.000    0.036    0.000 language.py:263(__repr__)
    16737    0.033    0.000    0.355    0.000 language.py:403(__and__)
    12219    0.033    0.000    0.140    0.000 runtime.py:1840(compress)
    92022    0.033    0.000    0.033    0.000 util.py:139(<genexpr>)
    54117    0.033    0.000    0.042    0.000 classifier.py:119(__len__)
69724/25128    0.033    0.000    0.378    0.000 util.py:145(<genexpr>)
    12219    0.032    0.000    0.032    0.000 {filter}
    29569    0.031    0.000    0.176    0.000 path.py:77(__is_not_drop_classifier__)
    23713    0.027    0.000    0.119    0.000 util.py:138(indent_str)
    28514    0.026    0.000    0.026    0.000 re.py:177(__init__)
   224049    0.026    0.000    0.026    0.000 {ord}
3412/2400    0.024    0.000   53.397    0.022 path.py:672(re_tree)
    21914    0.024    0.000    0.044    0.000 re.py:228(__init__)
10400/2400    0.022    0.000    0.046    0.000 re.py:461(smart_concat)
    48298    0.021    0.000    0.034    0.000 re.py:398(is_empty)
    41808    0.021    0.000    0.031    0.000 re.py:401(is_negated_empty)
    21914    0.020    0.000    0.374    0.000 re.py:349(re_sort)
    25159    0.019    0.000    1.184    0.000 re.py:58(__or__)
     4082    0.018    0.000    0.102    0.000 language.py:1320(__and__)
     1200    0.017    0.000    0.024    0.000 language_tools.py:100(ast_fold)
    10099    0.016    0.000    0.016    0.000 re.py:97(__init__)
    38113    0.016    0.000    0.016    0.000 language.py:86(compile)
    23713    0.013    0.000    0.013    0.000 {method 'splitlines' of 'str' objects}
    21230    0.013    0.000    0.037    0.000 language.py:410(__hash__)
     6654    0.012    0.000    0.024    0.000 re.py:159(__init__)
    19669    0.010    0.000    0.018    0.000 re.py:231(__eq__)
3036/1012    0.010    0.000    0.049    0.000 path.py:216(new_metadata_tree)
    12219    0.010    0.000    0.015    0.000 util.py:112(iteritems)
     6200    0.010    0.000    0.015    0.000 re.py:205(__init__)
     3253    0.010    0.000    0.028    0.000 language.py:284(generate_classifier)
    24438    0.009    0.000    0.009    0.000 {method 'iteritems' of 'dict' objects}
    21230    0.009    0.000    0.009    0.000 util.py:121(__hash__)
    23713    0.009    0.000    0.009    0.000 language.py:138(name)
    12219    0.008    0.000    0.008    0.000 {method 'copy' of 'dict' objects}
     7458    0.007    0.000    0.007    0.000 language.py:224(compile)
      200    0.005    0.000   53.459    0.267 path.py:881(re_tree)
     1200    0.005    0.000   53.411    0.045 path.py:721(re_tree)
    12219    0.005    0.000    0.005    0.000 runtime.py:1887(map_to_vlan)
     3245    0.004    0.000    0.008    0.000 re.py:146(__init__)
       21    0.004    0.000    1.045    0.050 path.py:210(__replace_pred__)
     1200    0.003    0.000    0.027    0.000 path.py:537(get_dyn_pols)
     4600    0.003    0.000    0.003    0.000 re.py:239(<lambda>)
     1012    0.002    0.000    0.002    0.000 path.py:680(re_tree)
    597/3    0.002    0.000   53.469   17.823 path.py:494(path_policy_ast_fold)
 1100/100    0.002    0.000    0.009    0.000 re.py:219(re_string_repr)
     3245    0.002    0.000    0.003    0.000 re.py:149(__eq__)
  900/100    0.002    0.000    0.005    0.000 path.py:516(path_ast_fold)
     2400    0.002    0.000    0.048    0.000 re.py:54(__xor__)
      400    0.001    0.000   43.421    0.109 path.py:849(re_tree)
     5600    0.001    0.000    0.001    0.000 re.py:170(re_string_repr)
     1200    0.001    0.000    0.002    0.000 language_tools.py:144(add_dynamic_sub_pols)
      600    0.001    0.000    0.001    0.000 path.py:725(invalidate_re_tree)
      400    0.001    0.000    0.002    0.000 re.py:380(smart_star)
      900    0.001    0.000    0.002    0.000 path.py:1102(inv_atoms)
      199    0.001    0.000    0.027    0.000 path.py:1128(__get_re_pols__)
      400    0.001    0.000    0.001    0.000 re.py:247(__init__)
      199    0.001    0.000   53.434    0.269 path.py:1116(__prep_re_trees__)
      609    0.000    0.000    0.000    0.000 weakref.py:48(remove)
     1200    0.000    0.000    0.000    0.000 path.py:685(invalidate_re_tree)
      400    0.000    0.000    0.002    0.000 re.py:66(__pos__)
      200    0.000    0.000    0.006    0.000 re.py:238(re_string_repr)
       45    0.000    0.000    0.022    0.000 path.py:173(__add_pred__)
       45    0.000    0.000    0.001    0.000 path.py:196(__new_symbol__)
      199    0.000    0.000    0.005    0.000 path.py:1098(__invalidate_re_trees__)
       52    0.000    0.000    0.000    0.000 path.py:146(char_in_lexer_language)
      200    0.000    0.000    0.000    0.000 re.py:133(__init__)
       52    0.000    0.000    0.000    0.000 path.py:152(char_from_token)
      200    0.000    0.000    0.007    0.000 re.py:259(re_string_repr)
   126/63    0.000    0.000    0.000    0.000 language.py:1128(__eq__)
       21    0.000    0.000    0.015    0.001 path.py:187(__del_pred__)
      200    0.000    0.000    0.000    0.000 string.py:308(join)
        1    0.000    0.000   53.478   53.478 stat.py:314(profiled_func)
        1    0.000    0.000   53.478   53.478 <string>:1(<module>)
        1    0.000    0.000   53.478   53.478 path.py:1155(compile)
       52    0.000    0.000    0.000    0.000 {unichr}
       45    0.000    0.000    0.000    0.000 {chr}
        2    0.000    0.000    0.000    0.000 language.py:236(generate_classifier)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        2    0.000    0.000    0.000    0.000 path.py:331(clear)
        1    0.000    0.000    0.000    0.000 {time.time}
        1    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


