Couldn't import dot_parser, loading of dot files will not be possible.
{'test': 'congested_link', 'm': '10', 'n': '10'}
         52187092 function calls (50861492 primitive calls) in 36.590 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
  2742079    7.296    0.000   12.355    0.000 language.py:418(map_check)
  3164895    2.930    0.000   15.935    0.000 language.py:415(covers)
  6200617    2.328    0.000    3.300    0.000 util.py:97(keys)
  3290248    2.295    0.000   18.230    0.000 classifier.py:406(<lambda>)
   334149    1.391    0.000    9.025    0.000 classifier.py:292(_cross_act)
    57469    1.334    0.000   32.185    0.001 classifier.py:226(__rshift__)
542678/38929    1.320    0.000   32.547    0.001 {reduce}
   352246    1.284    0.000    1.469    0.000 classifier.py:108(__init__)
  2771418    1.063    0.000    1.581    0.000 util.py:103(items)
  4411081    1.048    0.000    1.048    0.000 {isinstance}
  1532375    1.028    0.000    1.395    0.000 language.py:258(__eq__)
  6211176    0.976    0.000    0.976    0.000 {method 'keys' of 'dict' objects}
   334149    0.866    0.000    2.444    0.000 classifier.py:261(_sequence_actions)
   195058    0.825    0.000    2.845    0.000 language.py:361(intersect)
  3035722    0.755    0.000    0.755    0.000 util.py:118(__getitem__)
    57469    0.618    0.000   20.322    0.000 classifier.py:402(remove_shadowed_cover_single)
   503749    0.532    0.000    0.769    0.000 classifier.py:157(append)
  2771440    0.518    0.000    0.518    0.000 {method 'items' of 'dict' objects}
   376947    0.515    0.000    1.386    0.000 copy.py:66(copy)
2029668/1593361    0.507    0.000    0.718    0.000 {len}
   436307    0.386    0.000    1.059    0.000 language.py:357(__eq__)
   334149    0.350    0.000    9.376    0.000 classifier.py:302(_cross)
   334149    0.347    0.000    0.711    0.000 classifier.py:232(_commute_test)
  3347890    0.297    0.000    0.297    0.000 {id}
    42798    0.217    0.000    0.365    0.000 copy.py:306(_reconstruct)
    57469    0.213    0.000   32.398    0.001 language.py:1299(<lambda>)
   436307    0.211    0.000    0.282    0.000 util.py:134(__len__)
    42798    0.189    0.000    0.189    0.000 {method '__reduce_ex__' of 'object' objects}
   251417    0.183    0.000    0.183    0.000 classifier.py:20(__init__)
     4609    0.182    0.000    1.042    0.000 classifier.py:174(__invert__)
   334149    0.181    0.000    0.181    0.000 copy.py:113(_copy_with_constructor)
     1200    0.172    0.000   36.491    0.030 path.py:271(get_re_tree)
    21914    0.148    0.000    0.400    0.000 re.py:353(re_nub)
    18718    0.140    0.000    0.316    0.000 language.py:452(generate_classifier)
     9359    0.128    0.000    0.277    0.000 language.py:473(translate_virtual_fields)
18718/9359    0.127    0.000    0.959    0.000 language.py:326(__init__)
91921/3904    0.114    0.000    0.513    0.000 {method 'join' of 'str' objects}
    25159    0.108    0.000    0.990    0.000 re.py:433(smart_alter)
    18718    0.108    0.000    0.108    0.000 language.py:328(_get_processed_map)
    21914    0.107    0.000    0.296    0.000 {sorted}
   770056    0.107    0.000    0.107    0.000 {method 'append' of 'collections.deque' objects}
   226296    0.098    0.000    0.127    0.000 re.py:163(__eq__)
   224049    0.096    0.000    0.222    0.000 re.py:87(__ne__)
   224049    0.092    0.000    0.189    0.000 re.py:350(<lambda>)
49080/45672    0.091    0.000   20.763    0.000 {map}
    62360    0.090    0.000    0.090    0.000 {built-in method __new__ of type object at 0x84a640}
   419745    0.090    0.000    0.090    0.000 {method 'get' of 'dict' objects}
    43733    0.087    0.000    0.087    0.000 language.py:1110(__init__)
   136388    0.086    0.000    0.095    0.000 {method 'update' of 'dict' objects}
126303/65773    0.086    0.000    0.595    0.000 {repr}
    19385    0.083    0.000   34.445    0.002 path.py:87(has_nonempty_intersection)
   224049    0.075    0.000    0.097    0.000 re.py:167(sort_key)
    57469    0.074    0.000   20.395    0.000 classifier.py:388(optimize)
   120171    0.070    0.000    0.090    0.000 language.py:295(__eq__)
64113/28358    0.070    0.000   20.639    0.001 language.py:1115(compile)
19541/16133    0.066    0.000   33.807    0.002 language.py:1292(generate_classifier)
   213978    0.064    0.000    0.064    0.000 {method 'extend' of 'collections.deque' objects}
    19562    0.063    0.000    0.257    0.000 language.py:1309(__new__)
    37436    0.061    0.000    0.083    0.000 util.py:59(__init__)
31191/1852    0.057    0.000    0.538    0.000 language.py:1127(__repr__)
    65773    0.056    0.000    0.664    0.000 language.py:214(__hash__)
    39124    0.056    0.000    0.196    0.000 language.py:1318(__init__)
31191/1852    0.054    0.000    0.527    0.000 util.py:142(repr_plus)
    39124    0.053    0.000    0.136    0.000 language.py:1255(__init__)
77010/41256    0.052    0.000   20.679    0.001 language.py:1296(<lambda>)
    29339    0.052    0.000    0.124    0.000 language.py:443(__repr__)
    85596    0.047    0.000    0.047    0.000 {getattr}
19517/1012    0.045    0.000    0.822    0.001 path.py:239(replace_node)
   271411    0.045    0.000    0.045    0.000 {method 'append' of 'list' objects}
     9359    0.042    0.000    0.594    0.000 language.py:447(__init__)
     9359    0.041    0.000    0.806    0.000 language.py:352(generate_classifier)
   121060    0.040    0.000    0.040    0.000 util.py:139(<genexpr>)
91721/33043    0.040    0.000    0.462    0.000 util.py:145(<genexpr>)
    86145    0.040    0.000    0.048    0.000 path.py:79(<lambda>)
    15808    0.039    0.000    0.307    0.000 language.py:178(__and__)
    48298    0.039    0.000    0.095    0.000 re.py:434(r_empty_helper)
     9359    0.038    0.000    0.092    0.000 runtime.py:1922(vhs_to_num)
     7990    0.036    0.000   34.490    0.004 path.py:95(get_overlap_mode)
    42799    0.035    0.000    0.035    0.000 {hasattr}
    59349    0.034    0.000    0.044    0.000 classifier.py:119(__len__)
    31191    0.033    0.000    0.142    0.000 util.py:138(indent_str)
    19388    0.033    0.000   33.978    0.002 path.py:81(is_not_drop)
94088/94066    0.030    0.000    0.040    0.000 {hash}
     9359    0.030    0.000    0.108    0.000 util.py:65(update)
   142344    0.029    0.000    0.029    0.000 language.py:252(intersect)
     9359    0.029    0.000    0.029    0.000 {filter}
    42798    0.029    0.000    0.041    0.000 copy_reg.py:92(__newobj__)
    19388    0.029    0.000   33.838    0.002 path.py:66(__get_classifier__)
    18718    0.027    0.000    0.027    0.000 {method 'iteritems' of 'dict' objects}
    28514    0.023    0.000    0.023    0.000 re.py:177(__init__)
   224049    0.022    0.000    0.022    0.000 {ord}
    21914    0.021    0.000    0.038    0.000 re.py:228(__init__)
     9359    0.020    0.000    0.115    0.000 runtime.py:1917(compress)
10400/2400    0.019    0.000    0.043    0.000 re.py:461(smart_concat)
3412/2400    0.019    0.000   36.509    0.015 path.py:692(re_tree)
    48298    0.019    0.000    0.030    0.000 re.py:398(is_empty)
    10272    0.018    0.000    0.195    0.000 language.py:405(__and__)
    19388    0.018    0.000    0.107    0.000 path.py:77(__is_not_drop_classifier__)
    21914    0.018    0.000    0.314    0.000 re.py:349(re_sort)
    25159    0.017    0.000    1.007    0.000 re.py:58(__or__)
     3754    0.017    0.000    0.100    0.000 language.py:1324(__and__)
    41808    0.017    0.000    0.026    0.000 re.py:401(is_negated_empty)
    31191    0.017    0.000    0.017    0.000 {method 'splitlines' of 'str' objects}
    28293    0.016    0.000    0.043    0.000 language.py:412(__hash__)
     1200    0.015    0.000    0.021    0.000 language_tools.py:100(ast_fold)
    10099    0.015    0.000    0.015    0.000 re.py:97(__init__)
     4609    0.015    0.000   20.586    0.004 language.py:1155(generate_classifier)
    65773    0.014    0.000    0.014    0.000 language.py:263(__repr__)
     6654    0.012    0.000    0.023    0.000 re.py:159(__init__)
    19669    0.011    0.000    0.017    0.000 re.py:231(__eq__)
    31191    0.010    0.000    0.010    0.000 language.py:138(name)
    28293    0.010    0.000    0.010    0.000 util.py:121(__hash__)
3036/1012    0.010    0.000    0.045    0.000 path.py:225(new_metadata_tree)
     6200    0.010    0.000    0.016    0.000 re.py:205(__init__)
     4600    0.008    0.000    0.009    0.000 re.py:239(<lambda>)
     9359    0.007    0.000    0.011    0.000 util.py:112(iteritems)
     6131    0.007    0.000    0.007    0.000 language.py:224(compile)
     4609    0.006    0.000    0.015    0.000 language.py:204(__invert__)
    11375    0.006    0.000    0.006    0.000 language.py:86(compile)
     9359    0.006    0.000    0.006    0.000 {method 'copy' of 'dict' objects}
      200    0.005    0.000   36.566    0.183 path.py:901(re_tree)
     9359    0.005    0.000    0.005    0.000 runtime.py:1964(map_to_vlan)
     1200    0.004    0.000   36.522    0.030 path.py:741(re_tree)
     3245    0.004    0.000    0.007    0.000 re.py:146(__init__)
       21    0.004    0.000    0.859    0.041 path.py:219(__replace_pred__)
     1200    0.003    0.000    0.024    0.000 path.py:557(get_dyn_pols)
    597/3    0.002    0.000   36.575   12.192 path.py:514(path_policy_ast_fold)
 1100/100    0.002    0.000    0.014    0.000 re.py:219(re_string_repr)
  900/100    0.002    0.000    0.005    0.000 path.py:536(path_ast_fold)
     3245    0.002    0.000    0.003    0.000 re.py:149(__eq__)
     2400    0.002    0.000    0.044    0.000 re.py:54(__xor__)
     1012    0.002    0.000    0.002    0.000 path.py:700(re_tree)
      400    0.001    0.000   30.295    0.076 path.py:869(re_tree)
     5600    0.001    0.000    0.001    0.000 re.py:170(re_string_repr)
        1    0.001    0.001   36.590   36.590 stat.py:314(profiled_func)
     1200    0.001    0.000    0.001    0.000 language_tools.py:144(add_dynamic_sub_pols)
      600    0.001    0.000    0.001    0.000 path.py:745(invalidate_re_tree)
      400    0.001    0.000    0.002    0.000 re.py:380(smart_star)
      199    0.001    0.000    0.026    0.000 path.py:1148(__get_re_pols__)
      900    0.001    0.000    0.002    0.000 path.py:1122(inv_atoms)
      400    0.001    0.000    0.001    0.000 re.py:247(__init__)
      199    0.000    0.000   36.541    0.184 path.py:1136(__prep_re_trees__)
       45    0.000    0.000    0.027    0.001 path.py:178(__add_pred__)
      400    0.000    0.000    0.002    0.000 re.py:66(__pos__)
       45    0.000    0.000    0.001    0.000 path.py:205(__new_symbol__)
      617    0.000    0.000    0.000    0.000 weakref.py:48(remove)
     1200    0.000    0.000    0.000    0.000 path.py:705(invalidate_re_tree)
       57    0.000    0.000    0.000    0.000 path.py:151(char_in_lexer_language)
      199    0.000    0.000    0.005    0.000 path.py:1118(__invalidate_re_trees__)
      200    0.000    0.000    0.011    0.000 re.py:238(re_string_repr)
      200    0.000    0.000    0.000    0.000 re.py:133(__init__)
       57    0.000    0.000    0.000    0.000 path.py:157(char_from_token)
      200    0.000    0.000    0.012    0.000 re.py:259(re_string_repr)
       21    0.000    0.000    0.019    0.001 path.py:195(__del_pred__)
        1    0.000    0.000   36.590   36.590 <string>:1(<module>)
        1    0.000    0.000   36.589   36.589 path.py:1175(compile)
      200    0.000    0.000    0.000    0.000 string.py:308(join)
       57    0.000    0.000    0.000    0.000 {unichr}
       63    0.000    0.000    0.000    0.000 language.py:1130(__eq__)
       45    0.000    0.000    0.000    0.000 {chr}
        2    0.000    0.000    0.000    0.000 language.py:236(generate_classifier)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        2    0.000    0.000    0.000    0.000 path.py:351(clear)
        1    0.000    0.000    0.000    0.000 copy_reg.py:95(_slotnames)
        1    0.000    0.000    0.000    0.000 language.py:284(generate_classifier)
        1    0.000    0.000    0.000    0.000 {method 'get' of 'dictproxy' objects}
        1    0.000    0.000    0.000    0.000 {time.time}


